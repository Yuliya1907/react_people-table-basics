{"version":3,"sources":["api.ts","components/PersonLink.tsx","components/PersonItem.tsx","components/TablePeople.tsx","components/Loader/Loader.tsx","components/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","components/NavigationLink.tsx","components/Navigation.tsx","components/Layout.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","to","className","cn","sex","name","PersonItem","people","isSelected","mother","find","parent","motherName","father","fatherName","born","died","TablePeople","map","Loader","PeoplePage","isLoading","isError","useParams","length","HomePage","NotFoundPage","NavigationLink","title","isActive","Navigation","role","Layout","App","useState","setPeople","setIsError","setIsLoading","useEffect","loadPeople","loadedPeople","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6c3a88cb.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  person: Person,\n  slug: string\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, slug }) => {\n  return (\n    <Link\n      to={`../${slug}`}\n      className={cn({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { PersonLink } from './PersonLink';\nimport { Person } from '../types';\n\ntype Props = {\n  people: Person[],\n  person: Person,\n  isSelected: (person: Person) => boolean,\n\n};\n\nexport const PersonItem: React.FC<Props> = ({ person, people, isSelected }) => {\n  const mother = people\n    .find(parent => parent.name === person.motherName);\n  const father = people\n    .find(parent => parent.name === person.fatherName);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={person.slug}\n      className={cn({ 'has-background-warning': isSelected(person) })}\n    >\n      <td>\n        <PersonLink person={person} slug={person.slug} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {mother\n          ? <PersonLink person={mother} slug={mother.slug} />\n          : person.motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? <PersonLink person={father} slug={father.slug} />\n          : person.fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\n\nimport { Person } from '../types/Person';\nimport { PersonItem } from './PersonItem';\n\ntype Props = {\n  people: Person[],\n  slug: string,\n};\n\nexport const TablePeople: React.FC<Props> = ({ people, slug }) => {\n  const isSelected = (person: Person) => person.slug === slug;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            key={person.slug}\n            isSelected={isSelected}\n            person={person}\n            people={people}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TablePeople } from './TablePeople';\nimport { Person } from '../types/Person';\nimport { Loader } from './Loader';\n\ntype Props = {\n  people: Person[],\n  isLoading: boolean,\n  isError: boolean,\n};\n\nexport const PeoplePage: React.FC<Props> = ({\n  isLoading, isError, people,\n}) => {\n  const { slug = '' } = useParams();\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (<Loader />)}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length > 0\n            ? <TablePeople people={people} slug={slug} />\n            : (!isLoading && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  title: string,\n  to: string,\n};\n\nexport const NavigationLink: React.FC<Props> = ({ title, to }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => cn(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { NavigationLink } from './NavigationLink';\n\nexport const Navigation: React.FC = () => {\n  return (\n    <nav\n      className=\"navbar is-fixed-top has-shadow\"\n      data-cy=\"nav\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavigationLink to=\"/\" title=\"Home\" />\n          <NavigationLink to=\"/people\" title=\"People\" />\n\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { FC } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Navigation } from './Navigation';\n\nexport const Layout: FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Person } from './types/Person';\nimport { getPeople } from './api';\nimport { PeoplePage } from './components/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nimport './App.scss';\nimport { Layout } from './components/Layout';\n\nexport const App: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const loadPeople = async () => {\n      try {\n        setIsLoading(true);\n        const loadedPeople = await getPeople();\n\n        setPeople(loadedPeople);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadPeople();\n  }, []);\n\n  return (\n\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route path=\"/\" element={<HomePage />} />\n\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route\n            index\n            element={(\n              <PeoplePage\n                people={people}\n                isLoading={isLoading}\n                isError={isError}\n              />\n            )}\n          />\n          <Route\n            path=\":slug\"\n            element={(\n              <PeoplePage\n                people={people}\n                isLoading={isLoading}\n                isError={isError}\n              />\n            )}\n          />\n        </Route>\n\n        <Route\n          path=\"*\"\n          element={<NotFoundPage />}\n        />\n      </Route>\n    </Routes>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}